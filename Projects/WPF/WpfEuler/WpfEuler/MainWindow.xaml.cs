using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace WpfEuler
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        /// <summary>
        /// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. 
        /// The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.

        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void button1_Click(object sender, RoutedEventArgs e)
        {
            int sum = 0;

            for (int i = 0; i < 1000; i++)
            {
                if ((i % 3 == 0) || (i % 5 == 0))
                {
                    sum += i;
                }
            }
            textBox1.Text = sum.ToString();
        }

        /// <summary>
        /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
        /// By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
        /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
        /// find the sum of the even-valued terms.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        private void button2_Click(object sender, RoutedEventArgs e)
        {
            long n = 0;
            long next = 0;
            long sum = 0;
            long max = 4000000;
            long fibonacci = 0;
            Fibonacci(ref n, ref next, ref sum, ref max);
            fibonacci = n;
            textBox2.Text = string.Format("fibonacci = {0} sum = {1}", next, sum);
        }

        private void Fibonacci(ref long current, ref long next, ref long sum, ref long max)
        {
            if (current == 0)
            {
                next = 1;
                current = 1;
                Fibonacci(ref current, ref next, ref sum, ref max);
            }
            else if (current + next < max)
            {
                long temp = current + next;
                current = next;
                next = temp;
                textBox3.Text += string.Format("[{0}, {1}]", current, next);
                if (current % 2 == 0)
                    sum += current;
                Fibonacci(ref current, ref next, ref sum, ref max);
            }
            else
            {
                if (next % 2 == 0) // process last one
                    sum += next;
            }
        }

//        The prime factors of 13195 are 5, 7, 13 and 29.
 
//What is the largest prime factor of the number 600851475143 ?

    }
}
